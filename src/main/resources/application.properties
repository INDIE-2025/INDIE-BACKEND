spring.application.name=proyecto-final
spring.profiles.active=${SPRING_PROFILES_ACTIVE}
spring.main.web-application-type=servlet

# ===============================
# Datasource (MySQL)
# ===============================
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# ===============================
# Correo (Gmail)
# ===============================
spring.mail.host=${SPRING_MAIL_HOST}
spring.mail.port=${SPRING_MAIL_PORT}
spring.mail.username=${SPRING_MAIL_USERNAME}
spring.mail.password=${SPRING_MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=${SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH}
spring.mail.properties.mail.smtp.starttls.enable=${SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE}

# ===============================
# JPA / Hibernate
# ===============================
spring.jpa.hibernate.ddl-auto=update

# Usar nombres tal cual se definen en las entidades/campos (sin snake_case)
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.show-sql=false

# ===============================
# Flyway
# ===============================
spring.flyway.enabled=false
spring.flyway.baseline-on-migrate=true
spring.flyway.baseline-version=0
spring.flyway.out-of-order=true
spring.flyway.validate-on-migrate=false

# Incluir carpeta static y aceptar prefijo/separador del archivo existente (v1_create_db.sql)
spring.flyway.locations=classpath:db/migration
spring.flyway.sql-migration-suffixes=.sql

spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate=INFO

# ===============================
# Actuator (monitoring endpoints)
# ===============================
management.endpoints.web.exposure.include=health,info

# ===============================
# Server
# ===============================
# Permite configurar el puerto desde .env con fallback a 8080
server.port=${SERVER_PORT}
app.verification.url=${APP_VERIFICATION_URL}
app.jwtSecret=${APP_JWT_SECRET}
app.jwtExpirationMs=${APP_JWT_EXPIRATION_MS}
app.resetPassword.url=${APP_RESET_PASSWORD_URL}

# ===============================
# File Upload
# ===============================
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
spring.servlet.multipart.enabled=true

# Path pattern matching strategy (use ANT style for complex patterns with multiple wildcards)
spring.mvc.pathmatch.matching-strategy=ant_path_matcher

# ===============================
# CORS
# ===============================
# Or√≠genes permitidos (separados por coma). Puede sobreescribirse con APP_CORS_ALLOWED_ORIGINS
app.cors.allowed-origins=${APP_CORS_ALLOWED_ORIGINS}

# Respeta los encabezados X-Forwarded-* de Nginx/ALB para generar URLs absolutas y redirecciones correctas
server.forward-headers-strategy=native
